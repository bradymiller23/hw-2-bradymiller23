new_height
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, new_diameters)
plt()
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, new_diameters)
plot()
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, new_diameters)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height')
for (a in new_diameters){
abline(v = list(), col = 'green')}
lines(x, fitted(lm(y ~x), color = 'red'))
points(new_diameters %>% unlist(), new_height, col = 'violet')
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, new_diameters)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height')
abline(v = 0.25, col = 'green')
lines(x, fitted(lm(y ~x), color = 'red'))
... # Insert your code here.
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, new_diameters)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height')
abline(v = 0.25, col = 'green')
#lines(x, fitted(lm(y ~x), color = 'red'))
... # Insert your code here.
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, new_diameters)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height')
abline(v = 0.25, col = 'green')
#lines(x, fitted(lm(y ~x), color = 'red'))
... # Insert your code here.
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_x <- data.frame(new_diameters)
new_y <- predict(model, new_diameters)
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_x <- data.frame(new_diameters)
new_y <- predict(model, new_x)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height')
abline(v = 0.25, col = 'green')
lines(x, fitted(lm(y ~x), color = 'red'))
... # Insert your code here.
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_x <- data.frame(new_diameters)
new_y <- predict(model, new_x)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height')
lines(x, fitted(lm(y ~x), color = 'red'))
... # Insert your code here.
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_x <- data.frame(new_diameters)
new_y <- predict(model, new_x)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height')
lines(x, fitted(lm(y ~x), color = 'red'))
new_y <- predict(lm(y ~ x), new_x)
new_y
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_x <- data.frame(new_diameters)
new_y <- predict(lm(new_y ~ new_x), new_x)
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_x <- data.frame(new_diameters)
linear_model <- lm(y ~ x)
View(linear_model)
linear_model
new_y <- predict(linear_model, new_data = new_x)
new_y
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters <- data.frame(new_diameters)
linear_model <- lm(y ~ x)
predict(linear_model, new_data = new_diameters)
new_y
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height')
lines(x, fitted(lm(y ~x), color = 'red'))
new_height <- predict(lm(height ~ new_diameters), new_data = new_diameters)
new_height <- predict(lm(y ~ new_diameters), new_data = new_diameters)
x <- df$diameter
y <- df$height
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
lines(x, fitted(lm(y ~x), color = 'red'))
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, newdata = new_diameters)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height')
lines(x, fitted(lm(y ~x), color = 'red'))
points
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, newdata = new_diameters)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
lines(x, fitted(lm(y ~x), color = 'red'))
points
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, newdata = new_diameters)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
lines(x, fitted(lm(y~x), color = 'red'))
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, newdata = new_diameters)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
lines(x, fitted(lm(y~x), color = 'red'))
points(new_dimeters %>% unlist(), new_height, col = 'violet')
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, newdata = new_diameters)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
lines(x, fitted(lm(y~x), color = 'red'))
points(new_diameters %>% unlist(), new_height, col = 'violet')
?map2()
View(abalone)
?plot_grid()
df %>%
mutate(num_rings = (if (rings > 20){
num_rings = 'high'
}
else if (rings < 10){
num_rings = 'low'
}
else {
num_rings = 'med'
}))
df %>%
mutate(num_rings = (if (rings > 20){
num_rings = 'high'
}
ifelse (rings < 10){
df %>%
mutate(num_rings = ifelse(rings>20, 'high', num_rings),
num_rings = ifelse(rings<10, 'low', num_rings),
num_rings = ifelse((rings<=20 && rings >= 10), 'med', num_rings))
df %>%
mutate(num_rings = ifelse(rings>20, 'high'),
num_rings = ifelse(rings<10, 'low'),
num_rings = ifelse((rings<=20 && rings >= 10), 'med'))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', ifelse((rings<=20 && rings >= 10), 'med'))))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med')))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = whole_weight + shucked_weight + viscera_weight + shell_weight)
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = SUM(whole_weight + shucked_weight + viscera_weight + shell_weight))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = sum(whole_weight + shucked_weight + viscera_weight + shell_weight))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = sum(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
geom_tile(aes(x = num_rings, y = sex, color = avg_weight))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = sum(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, color = avg_weight))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = whole_weight + shucked_weight + viscera_weight + shell_weight) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, color = avg_weight))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, color = avg_weight))
geom_tile()
?geom_tile()
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, color = avg_weight))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings")
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
guides(fill=guide_legend(title="Average Weight"))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
guides(fill=guide_legend(title="Average Weight")) +
title('Number of rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
guides(fill=guide_legend(title="Average Weight")) +
title('Number of rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
guides(fill=guide_legend(title="Average Weight")) +
ggtitle('Number of rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
guides(fill=guide_legend(title="Average Weight")) +
ggtitle('Number of Rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
ggtitle('Number of Rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
guide(legend_title = 'Average Weight') +
ggtitle('Number of Rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
theme(legend.title = 'Average Weight') +
ggtitle('Number of Rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
theme(legend_title = 'Average Weight') +
ggtitle('Number of Rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
labs(color = 'Average Weight') +
ggtitle('Number of Rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
labs(fill = 'Average Weight') +
ggtitle('Number of Rings vs Sex')
