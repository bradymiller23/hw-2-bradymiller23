group_by(sex) %>%
summarise(mean_length = mean(length),
mean_diameter = mean(diameter),
mean_height = mean(height),
mean_whole_weight = mean(whole_weight),
mean_shucked_weight = mean(shucked_weight),
mean_viscera_weight = mean(viscera_weight),
mean_rings = mean(rings)) %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_rings), stat = 'identity')
df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise(mean_length = mean(length),
mean_diameter = mean(diameter),
mean_height = mean(height),
mean_whole_weight = mean(whole_weight),
mean_shucked_weight = mean(shucked_weight),
mean_viscera_weight = mean(viscera_weight),
mean_rings = mean(rings)) %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_viscera_weight), stat = 'identity')
df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise(mean_length = mean(length),
mean_diameter = mean(diameter),
mean_height = mean(height),
mean_whole_weight = mean(whole_weight),
mean_shucked_weight = mean(shucked_weight),
mean_viscera_weight = mean(viscera_weight),
mean_rings = mean(rings)) %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_length), stat = 'identity')
View(abalone)
df2 <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise(mean_length = mean(length),
mean_diameter = mean(diameter),
mean_height = mean(height),
mean_whole_weight = mean(whole_weight),
mean_shucked_weight = mean(shucked_weight),
mean_viscera_weight = mean(viscera_weight),
mean_shell_weight = mean(shell_weight),
mean_rings = mean(rings))
library(readr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(purrr)
library(cowplot)
library(readr)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone_col_names <- c(
"sex",
"length",
"diameter",
"height",
"whole_weight",
"shucked_weight",
"viscera_weight",
"shell_weight",
"rings"
)
# reading in the url to create 'abalone' tibble
abalone <- read.csv(url)
# renaming columns in 'abalone' to col names provided
colnames(abalone) = abalone_col_names
df <- abalone %>%
na.omit()
df %>%
ggplot()+
geom_bar(aes(x = sex))
df %>%
ggplot() +
geom_boxplot(aes(x = length, y = sex))
df %>%
ggplot() +
geom_violin(aes(x = diameter, y = sex))
df %>%
ggplot() +
geom_point(aes(x = length, y = diameter, shape = sex, color = sex, size = shell_weight))
df %>%
ggplot() +
geom_point(aes(x = length, y = diameter, color = sex)) +
geom_smooth(aes(x = length, y = diameter), method = lm, color = 'black') +
facet_wrap(~sex, nrow = 3)
df2 <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise(mean_length = mean(length),
mean_diameter = mean(diameter),
mean_height = mean(height),
mean_whole_weight = mean(whole_weight),
mean_shucked_weight = mean(shucked_weight),
mean_viscera_weight = mean(viscera_weight),
mean_shell_weight = mean(shell_weight),
mean_rings = mean(rings))
p1 <- df %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_length), stat = 'identity')
p2 <- df %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_diameter), stat = 'identity')
p3 <- df %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_height), stat = 'identity')
p4 <- df %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_whole_weight), stat = 'identity')
p5 <- df %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_shucked_weight), stat = 'identity')
p6 <- df %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_viscera_weight), stat = 'identity')
p7 <- df %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_shell_weight), stat = 'identity')
p8 <- df %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_rings), stat = 'identity')
p1+p2+p3+p4+p5+p6+p7+p8
library(patchwork)
install.packages('patchwork')
library(patchwork)
df2 <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise(mean_length = mean(length),
mean_diameter = mean(diameter),
mean_height = mean(height),
mean_whole_weight = mean(whole_weight),
mean_shucked_weight = mean(shucked_weight),
mean_viscera_weight = mean(viscera_weight),
mean_shell_weight = mean(shell_weight),
mean_rings = mean(rings))
p1 <- df %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_length), stat = 'identity')
p2 <- df %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_diameter), stat = 'identity')
p3 <- df %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_height), stat = 'identity')
p4 <- df %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_whole_weight), stat = 'identity')
p5 <- df %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_shucked_weight), stat = 'identity')
p6 <- df %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_viscera_weight), stat = 'identity')
p7 <- df %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_shell_weight), stat = 'identity')
p8 <- df %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_rings), stat = 'identity')
p1+p2+p3+p4+p5+p6+p7+p8
library(patchwork)
df2 <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise(mean_length = mean(length),
mean_diameter = mean(diameter),
mean_height = mean(height),
mean_whole_weight = mean(whole_weight),
mean_shucked_weight = mean(shucked_weight),
mean_viscera_weight = mean(viscera_weight),
mean_shell_weight = mean(shell_weight),
mean_rings = mean(rings))
p1 <- df2 %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_length), stat = 'identity')
p2 <- df2 %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_diameter), stat = 'identity')
p3 <- df2 %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_height), stat = 'identity')
p4 <- df2 %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_whole_weight), stat = 'identity')
p5 <- df2 %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_shucked_weight), stat = 'identity')
p6 <- df2 %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_viscera_weight), stat = 'identity')
p7 <- df2 %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_shell_weight), stat = 'identity')
p8 <- df2 %>%
ggplot() +
geom_bar(aes(x = sex, y = mean_rings), stat = 'identity')
p1+p2+p3+p4+p5+p6+p7+p8
parameter <- c(mean_length, mean_diameter, mean_height, mean_whole_weight, mean_shucked_weight, mean_viscera_weight, mean_shell_weight, mean_rings)
df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise(mean_length = mean(length),
mean_diameter = mean(diameter),
mean_height = mean(height),
mean_whole_weight = mean(whole_weight),
mean_shucked_weight = mean(shucked_weight),
mean_viscera_weight = mean(viscera_weight),
mean_shell_weight = mean(shell_weight),
mean_rings = mean(rings)) %>%
par(mfrow = c(3,3)) %>%
plot(sex, mean_length) %>%
plot(sex, mean_diameter) %>%
plot(sex, mean_height) %>%
plot(sex, mean_whole_weight) %>%
plot(sex, mean_shucked_weight) %>%
plot(sex, mean_viscera_weight) %>%
plot(sex, mean_shell_weight) %>%
plot(sex, mean_rings)
plot(sex, mean_rings, df)
library(readr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(purrr)
library(cowplot)
library(readr)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone_col_names <- c(
"sex",
"length",
"diameter",
"height",
"whole_weight",
"shucked_weight",
"viscera_weight",
"shell_weight",
"rings"
)
# reading in the url to create 'abalone' tibble
abalone <- read.csv(url)
# renaming columns in 'abalone' to col names provided
colnames(abalone) = abalone_col_names
df <- abalone %>%
na.omit()
df %>%
ggplot()+
geom_bar(aes(x = sex))
df %>%
ggplot() +
geom_boxplot(aes(x = length, y = sex))
df %>%
ggplot() +
geom_violin(aes(x = diameter, y = sex))
df %>%
ggplot() +
geom_point(aes(x = length, y = diameter, shape = sex, color = sex, size = shell_weight))
?plot()
df2 <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise(mean_length = mean(length),
mean_diameter = mean(diameter),
mean_height = mean(height),
mean_whole_weight = mean(whole_weight),
mean_shucked_weight = mean(shucked_weight),
mean_viscera_weight = mean(viscera_weight),
mean_shell_weight = mean(shell_weight),
mean_rings = mean(rings))
plot(sex, mean_rings, df2)
plot('sex', 'mean_rings', df2)
par(mfrow = c(3,3))
plot(sex, mean_length)
plot(height, length)
plot(df2%sex, df2$mean_length)
plot(df2$sex, df2$mean_length)
df2$sex
library(readr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(purrr)
library(cowplot)
library(readr)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone_col_names <- c(
"sex",
"length",
"diameter",
"height",
"whole_weight",
"shucked_weight",
"viscera_weight",
"shell_weight",
"rings"
)
# reading in the url to create 'abalone' tibble
abalone <- read.csv(url)
# renaming columns in 'abalone' to col names provided
colnames(abalone) = abalone_col_names
df <- abalone %>%
na.omit()
df %>%
ggplot()+
geom_bar(aes(x = sex))
df %>%
ggplot() +
geom_boxplot(aes(x = length, y = sex))
df %>%
ggplot() +
geom_violin(aes(x = diameter, y = sex))
df %>%
ggplot() +
geom_point(aes(x = length, y = diameter, shape = sex, color = sex, size = shell_weight))
df %>%
ggplot() +
geom_point(aes(x = length, y = diameter, color = sex)) +
geom_smooth(aes(x = length, y = diameter), method = lm, color = 'black') +
facet_wrap(~sex, nrow = 3)
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
labs(fill = 'Average Weight') +
ggtitle('Number of Rings vs Sex')
library(corrplot)
# selecting all columns in table except for the sex column
df2 <- df %>%
select(length, diameter, height, whole_weight, shucked_weight, viscera_weight, shell_weight, rings)
# getting all the correlation values for each pair of quantitative variables & displaying that table
data.cor <- round(cor(df2),2)
data.cor
# creating a shaded plot that shows the correlation between each quantitative variable
corrplot(data.cor, method = 'shade', is.corr = FALSE, col.lim = c(0,1), title = 'Pairwise Correlation Table of Quantitative Variables')
x <- df$diameter
y <- df$height
model <- lm(y ~ x, df)
summary(model)
x <- df$diameter
y <- df$height
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
lines(x, fitted(lm(y ~x), color = 'red'))
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, newdata = new_diameters)
new_height
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
lines(x, fitted(lm(y~x), color = 'red'))
points(new_diameters, new_height, col = 'violet')
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_height <- predict(model, data.frame(diameter = new_diameters))
new_height
new_height <- predict(model, data.frame(new_diameters = diameter))
new_height <- predict(model, data.frame(new_diameters))
new_height
new_diameters <- data.frame(x = new_diameters)
new_height <- predict(model, new_diameters)
new_height
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters <- data.frame(x = new_diameters)
new_height <- predict(model, new_diameters)
new_height
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
lines(x, fitted(lm(y~x), color = 'red'))
points(new_diameters, new_height, col = 'violet')
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_x <- data.frame(x = new_diameters)
new_height <- predict(model, new_x)
new_height
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
lines(x, fitted(lm(y~x), color = 'red'))
points(new_diameters %>% unlist(), new_height, col = 'violet')
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_x <- data.frame(x = new_diameters)
new_height <- predict(model, new_x)
new_height
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
lines(x, fitted(lm(y~x), color = 'red'))
points(new_diameters %>% unlist(), new_height, col = 'violet', pch = 19)
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_x <- data.frame(x = new_diameters)
new_height <- predict(model, new_x)
new_height
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey', xlim = (0,1))
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_x <- data.frame(x = new_diameters)
new_height <- predict(model, new_x)
new_height
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey', xlim = (1))
?xlim()
?plot()
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_x <- data.frame(x = new_diameters)
new_height <- predict(model, new_x)
new_height
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey', xlim = c(0,1))
lines(x, fitted(lm(y~x), color = 'red'))
points(new_diameters %>% unlist(), new_height, col = 'violet', pch = 19)
?plot()
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_x <- data.frame(x = new_diameters)
new_height <- predict(model, new_x)
new_height
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey', xlim = c(0,1))
lines(x, fitted(lm(y~x), color = 'red'), xlim = c(0,1))
points(new_diameters %>% unlist(), new_height, col = 'violet', pch = 19)
?plot()
