0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_x <- data.frame(new_diameters)
new_y <- predict(model, new_x)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height')
lines(x, fitted(lm(y ~x), color = 'red'))
new_y <- predict(lm(y ~ x), new_x)
new_y
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_x <- data.frame(new_diameters)
new_y <- predict(lm(new_y ~ new_x), new_x)
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_x <- data.frame(new_diameters)
linear_model <- lm(y ~ x)
View(linear_model)
linear_model
new_y <- predict(linear_model, new_data = new_x)
new_y
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters <- data.frame(new_diameters)
linear_model <- lm(y ~ x)
predict(linear_model, new_data = new_diameters)
new_y
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height')
lines(x, fitted(lm(y ~x), color = 'red'))
new_height <- predict(lm(height ~ new_diameters), new_data = new_diameters)
new_height <- predict(lm(y ~ new_diameters), new_data = new_diameters)
x <- df$diameter
y <- df$height
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
lines(x, fitted(lm(y ~x), color = 'red'))
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, newdata = new_diameters)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height')
lines(x, fitted(lm(y ~x), color = 'red'))
points
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, newdata = new_diameters)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
lines(x, fitted(lm(y ~x), color = 'red'))
points
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, newdata = new_diameters)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
lines(x, fitted(lm(y~x), color = 'red'))
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, newdata = new_diameters)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
lines(x, fitted(lm(y~x), color = 'red'))
points(new_dimeters %>% unlist(), new_height, col = 'violet')
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, newdata = new_diameters)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
lines(x, fitted(lm(y~x), color = 'red'))
points(new_diameters %>% unlist(), new_height, col = 'violet')
?map2()
View(abalone)
?plot_grid()
df %>%
mutate(num_rings = (if (rings > 20){
num_rings = 'high'
}
else if (rings < 10){
num_rings = 'low'
}
else {
num_rings = 'med'
}))
df %>%
mutate(num_rings = (if (rings > 20){
num_rings = 'high'
}
ifelse (rings < 10){
df %>%
mutate(num_rings = ifelse(rings>20, 'high', num_rings),
num_rings = ifelse(rings<10, 'low', num_rings),
num_rings = ifelse((rings<=20 && rings >= 10), 'med', num_rings))
df %>%
mutate(num_rings = ifelse(rings>20, 'high'),
num_rings = ifelse(rings<10, 'low'),
num_rings = ifelse((rings<=20 && rings >= 10), 'med'))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', ifelse((rings<=20 && rings >= 10), 'med'))))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med')))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = whole_weight + shucked_weight + viscera_weight + shell_weight)
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = SUM(whole_weight + shucked_weight + viscera_weight + shell_weight))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = sum(whole_weight + shucked_weight + viscera_weight + shell_weight))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = sum(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
geom_tile(aes(x = num_rings, y = sex, color = avg_weight))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = sum(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, color = avg_weight))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = whole_weight + shucked_weight + viscera_weight + shell_weight) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, color = avg_weight))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, color = avg_weight))
geom_tile()
?geom_tile()
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, color = avg_weight))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings")
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
guides(fill=guide_legend(title="Average Weight"))
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
guides(fill=guide_legend(title="Average Weight")) +
title('Number of rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
guides(fill=guide_legend(title="Average Weight")) +
title('Number of rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
guides(fill=guide_legend(title="Average Weight")) +
ggtitle('Number of rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
guides(fill=guide_legend(title="Average Weight")) +
ggtitle('Number of Rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
ggtitle('Number of Rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
guide(legend_title = 'Average Weight') +
ggtitle('Number of Rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
theme(legend.title = 'Average Weight') +
ggtitle('Number of Rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
theme(legend_title = 'Average Weight') +
ggtitle('Number of Rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
labs(color = 'Average Weight') +
ggtitle('Number of Rings vs Sex')
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
labs(fill = 'Average Weight') +
ggtitle('Number of Rings vs Sex')
df %>%
select(length, diameter, height, whole_weight, shucked_weight, viscera_weight, shell_weight, rings) %>%
?corr()
library(readr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(purrr)
library(cowplot)
library(readr)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone_col_names <- c(
"sex",
"length",
"diameter",
"height",
"whole_weight",
"shucked_weight",
"viscera_weight",
"shell_weight",
"rings"
)
# reading in the url to create 'abalone' tibble
abalone <- read.csv(url)
# renaming columns in 'abalone' to col names provided
colnames(abalone) = abalone_col_names
df <- abalone %>%
na.omit()
df %>%
ggplot()+
geom_bar(aes(x = sex))
df %>%
ggplot() +
geom_boxplot(aes(x = length, y = sex))
?geom_violin()
df %>%
ggplot() +
geom_violin(aes(x = diameter, y = sex))
df %>%
ggplot() +
geom_point(aes(x = length, y = diameter, shape = sex, color = sex, size = shell_weight))
df %>%
ggplot() +
geom_point(aes(x = length, y = diameter, color = sex)) +
geom_smooth(aes(x = length, y = diameter), method = lm, color = 'black') +
facet_wrap(~sex, nrow = 3)
df %>%
mutate(num_rings = ifelse(rings>20, 'high', ifelse(rings<10, 'low', 'med'))) %>%
group_by(num_rings, sex) %>%
summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight)) %>%
ggplot() +
geom_tile(aes(x = num_rings, y = sex, fill = avg_weight)) +
xlab("Number of rings") +
labs(fill = 'Average Weight') +
ggtitle('Number of Rings vs Sex')
#df %>%
select(length, diameter, height, whole_weight, shucked_weight, viscera_weight, shell_weight, rings
?corr()
?corr()
?corrplot()
library(corrplot)
install.packages('corrplot')
library(corrplot)
?corrplot()
df2 <- df %>%
select(length, diameter, height, whole_weight, shucked_weight, viscera_weight, shell_weight, rings)
data.cor = cor(df2)
data.cor <- cor(df2)
data.cor
corrplot(data.cor, method = 'square')
data.cor <- cor(df2, round(df2, 2))
data.cor
data.cor <- round(cor(df2),2)
data.cor
corrplot(data.cor, method = 'square')
corrplot(data.cor, method = 'number')
corrplot(data.cor, method = 'number', order = 'AOE')
corrplot(data.cor, method = 'number'#, order = 'AOE')
corrplot(data.cor, method = 'number'#, order = 'AOE')
corrplot(data.cor, method = 'number')#, order = 'AOE')
corrplot(data.cor, method = 'shade')#, order = 'AOE')
corrplot(data.cor, method = 'pie')#, order = 'AOE')
corrplot(data.cor, method = 'ellipse')#, order = 'AOE')
corrplot(data.cor, method = 'shade', col = wb)#, order = 'AOE')
wb = c('white', 'black')
corrplot(data.cor, method = 'shade', col = wb)#, order = 'AOE')
corrplot(data.cor, method = 'shade', cl.pos = 'n')#, order = 'AOE')
corrplot(data.cor, method = 'shade')#, order = 'AOE')
corrplot(data.cor, method = 'shade', cl.length = 21)#, order = 'AOE')
corrplot(data.cor, method = 'shade', addCoef.col = 'grey')#, order = 'AOE')
corrplot(data.cor, method = 'shade', outline = TRUE)#, order = 'AOE')
corrplot(data.cor, method = 'shade', cor.lim = c(0,1))#, order = 'AOE')
df %>%
select(length, diameter, height, whole_weight, shucked_weight, viscera_weight, shell_weight, rings) %>%
corrplot(round(cor(df),2), method = 'shade')
data.cor
library(corrplot)
# selecting all columns in table except for the sex column
df2 <- df %>%
select(length, diameter, height, whole_weight, shucked_weight, viscera_weight, shell_weight, rings)
# getting all the correlation values for each pair of quantitative variables & displaying that table
data.cor <- round(cor(df2),2)
data.cor
# creating a shaded plot that shows the correlation between each quantitative variable
corrplot(data.cor, method = 'shade', outline =)#, order = 'AOE')
# creating a shaded plot that shows the correlation between each quantitative variable
corrplot(data.cor, method = 'shade', order = 'AOE')
# creating a shaded plot that shows the correlation between each quantitative variable
corrplot(data.cor, method = 'shade')
# creating a shaded plot that shows the correlation between each quantitative variable
corrplot(data.cor, method = 'shade', is.corr = FALSE, col.lim = c(0,1))
# creating a shaded plot that shows the correlation between each quantitative variable
corrplot(data.cor, method = 'shade', is.corr = FALSE, col.lim = c(0,1), title = 'Pairwise Correlation Table of Quantitative Variables', order = 'original')
# creating a shaded plot that shows the correlation between each quantitative variable
corrplot(data.cor, method = 'shade', is.corr = FALSE, col.lim = c(0,1), title = 'Pairwise Correlation Table of Quantitative Variables', order = 'FPC')
# creating a shaded plot that shows the correlation between each quantitative variable
corrplot(data.cor, method = 'shade', is.corr = FALSE, col.lim = c(0,1), title = 'Pairwise Correlation Table of Quantitative Variables', order = 'hclust')
# creating a shaded plot that shows the correlation between each quantitative variable
corrplot(data.cor, method = 'shade', is.corr = FALSE, col.lim = c(0,1), title = 'Pairwise Correlation Table of Quantitative Variables', order = 'alphabet')
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, newdata = new_diameters)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
lines(x, fitted(lm(y~x), color = 'red'))
points(new_diameters %>% unlist(), new_height, col = 'violet')
?predict()
new_diameters <- c(
0.15218946,
0.48361548,
0.58095513,
0.07603687,
0.50234599,
0.83462092,
0.95681938,
0.92906875,
0.94245437,
0.01209518
)
new_diameters <- data.frame(new_diameters)
new_height <- predict(model, newdata = new_diameters)
plot(x, y, xlab = 'diameter', ylab = 'height', pch=20, main = 'Abalone ring diameter vs height', col = 'grey')
lines(x, fitted(lm(y~x), color = 'red'))
points(new_diameters, new_height, col = 'violet')
new_heigth
new_height
new_height <- predict(newdata = new_diameters)
new_diameters <- data.frame(new_diameters)
new_height <- predict(lm(new_height ~ new_diameters),newdata = new_diameters)
new_diameters <- data.frame(new_diameters)
new_height <- predict(lm(new_height ~ new_diameters),newdata = new_diameters)
typeof(new_diameters)
?lm()
?map2()
map2(df$rings, df$c(length, diameter, height, whole_weight, shucked_weight, viscera_weight, shell_weight, rings))
dfrings <- df %>%
select(rings)
df3 <- df %>%
select(length, height, diameter, whole_weight, shucked_weight, viscera_weight, shell_weight, rings)
map2(dfrings, df3)
cowplot::plot_grid(map2(dfrings, df3))
cowplot::plot_grid(map2(dfrings, df3, df3 ~ dfrings))
